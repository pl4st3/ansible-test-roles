#!/bin/bash
#/usr/lib/check_mk_agent/local
export LANG=de_DE.UTF-8

function confline # get first line from file $1 mathing $2, stripped of # and ; comment lines, stripped spaces and tabs down to spaces, remove trailing ;
{
 echo $(cat $1|grep -v '^$\|^\s*\#'|sed -e "s/[[:space:]]\+/ /g"|sed s/^\ //|sed s/\;//|grep -i "$2"|head -n 1)
}

function conflines # get lines from file $1 mathing $2, stripped of # and ; comment lines, stripped spaces and tabs down to spaces, remove trailing ;
{
 echo "$(cat $1|grep -v '^$\|^\s*\#'|sed -e "s/[[:space:]]\+/ /g"|sed s/^\ //|sed s/\;//|grep -i $2)"
}

function ati # ipv4 to longint
{
 ip4=$1; ipno=0
 for (( i=0 ; i<4 ; ++i )); do
   ((ipno+=${ip4%%.*}*$((254**$((3-${i})))))) # .0 .255 should not be counted
   ip4=${ip4#*.}
  done
 echo $ipno
}

# get exspected domains from kea.conf
keaconf="/etc/kea/kea.conf"
domain_ids=($(cat $keaconf|jq -r '.Dhcp4.subnet4 |map(.id)'|grep .[0-9]|tr -d ', '))
domain_v4ranges=($(cat $keaconf|jq -r '.Dhcp4.subnet4 |map(.pools)'|grep pool|cut -d: -f 2|tr -d '" '))
domain_cliifs=($(cat $keaconf|jq -r '.Dhcp4.subnet4 |map(.interface)'|grep '"'|tr -d '", '))
domaincount=0
for domain in "${domain_ids[@]}"; do
  domaincountz=$domaincount
# echo "Domain:$domain cli_if:${domain_cliifs[$domaincount]} iprange:${domain_v4ranges[$domaincount]} "
  ((domaincount++))
 done
# echo Total domains configured:$domaincount $domaincountz

TFILE="/tmp/serverstatus.19587$.1.tmp"
TFILE2="/tmp/serverstatus.19587$.2.tmp"
TFILE="/tmp/$(basename $0).$$.1.tmp"
TFILE2="/tmp/$(basename $0).$$.2.tmp"
/usr/lib/check_mk_agent/local/supernode>$TFILE
/usr/lib/check_mk_agent/local/300/supernode-infra>$TFILE2
keaok=$(confline $TFILE "KEA"|grep -oP '(?<=keaactive=).*'|cut -d";" -f1|cut -d":" -f1)
postgresok=$(confline $TFILE "Postgres"|grep -oP '(?<=postgresactive=).*'|cut -d";" -f1)
bind9ok=$(confline $TFILE "Bind9"|grep -oP '(?<=bindactive=).*'|cut -d";" -f1|cut -d":" -f1)
dns4v4=$(confline $TFILE2 "dns"|grep -oP '(?<=dns4via4=).*'|cut -d";" -f1|cut -d":" -f1|cut -d"." -f1)
dns4v6=$(confline $TFILE2 "dns"|grep -oP '(?<=dns4via6=).*'|cut -d";" -f1|cut -d":" -f1|cut -d"." -f1)
dns6v4=$(confline $TFILE2 "dns"|grep -oP '(?<=dns6via4=).*'|cut -d";" -f1|cut -d":" -f1|cut -d"." -f1)
dns6v6=$(confline $TFILE2 "dns"|grep -oP '(?<=dns6via6=).*'|cut -d";" -f1|cut -d":" -f1|cut -d"." -f1)
[ "$dns4v4"=="$domaincount" ] && dns4v4ok=1
[ "$dns4v6"=="$domaincount" ] && dns4v6ok=1
[ "$dns6v4"=="$domaincount" ] && dns6v4ok=1
[ "$dns6v6"=="$domaincount" ] && dns6v6ok=1
dnsok=$(($dns4v4ok+$dns4v6ok+$dns6v4ok+$dns6v6ok))
# dns dns4via4=11.0;10:12;10:12|dns4via6=11.0;10:12;10:12|dns6via4=11.0;10:12;10:12|dns6via6=11.0;10:12;10:12
for b in "${domain_ids[@]}"; do
#  z=$( batctl -m $b o 2>/dev/null | wc -l )
#  if [ $z -ge 1 ]; then
   domainidpad=$(printf "%.2d\n" $b)
   gwcount=$(conflines $TFILE "Batman-bat$domainidpad"|grep -oP '(?<=Gateways=).*'|cut -d";" -f1)
   dhtest=$(conflines $TFILE2 "dhcp4-$domainidpad"|grep -oP '(?<=dhtest=).*'|cut -d";" -f1|cut -d":" -f1)
   ffexit4=$(conflines $TFILE2 "ffexit-$domainidpad"|grep -oP '(?<=ffping4=).*'|cut -d";" -f1|cut -d":" -f1)
   ffexit6=$(conflines $TFILE2 "ffexit-$domainidpad"|grep -oP '(?<=ffping6=).*'|cut -d";" -f1|cut -d":" -f1)
   echo domain:$b domainidpad:$domainidpad gwcount:$gwcount keaok:$keaok postgresok:$postgresok bind9ok:$bind9ok dhtest=$dhtest ffexit4=$ffexit4 ffexit6=$ffexit6 dnsok=$dnsok
 done
